name: Build FFmpeg for Android

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NDK_VERSION: "26.2.11394342"

jobs:
  build:
    strategy:
      matrix:
        arch: [arm64, armv7, armv7neon, x86_64, x86]
        include:
          - arch: arm64
            cross_prefix: aarch64-linux-android-
            arch_flag: aarch64
            cpu: armv8-a
            cc: aarch64-linux-android21-clang
            cxx: aarch64-linux-android21-clang++
            openssl_arch: android-arm64
            android_abi: arm64-v8a
          - arch: armv7
            cross_prefix: arm-linux-androideabi-
            arch_flag: arm
            cpu: armv7-a
            cc: armv7a-linux-androideabi21-clang
            cxx: armv7a-linux-androideabi21-clang++
            openssl_arch: android-arm
            android_abi: armeabi-v7a
          - arch: armv7neon
            cross_prefix: arm-linux-androideabi-
            arch_flag: arm
            cpu: armv7-a
            cc: armv7a-linux-androideabi21-clang
            cxx: armv7a-linux-androideabi21-clang++
            openssl_arch: android-arm
            android_abi: armeabi-v7a
          - arch: x86_64
            cross_prefix: x86_64-linux-android-
            arch_flag: x86_64
            cpu: x86-64
            cc: x86_64-linux-android21-clang
            cxx: x86_64-linux-android21-clang++
            openssl_arch: android-x86_64
            android_abi: x86_64
          - arch: x86
            cross_prefix: i686-linux-android-
            arch_flag: x86
            cpu: i686
            cc: i686-linux-android21-clang
            cxx: i686-linux-android21-clang++
            openssl_arch: android-x86
            android_abi: x86
      fail-fast: false
    
    runs-on: ubuntu-latest
    
    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_NDK_ROOT: ${{ github.workspace }}/android-ndk

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Download and Setup NDK
      run: |
        mkdir -p ${{ github.workspace }}/android-ndk
        wget -q https://dl.google.com/android/repository/android-ndk-r26b-linux.zip
        unzip -q android-ndk-r26b-linux.zip
        mv android-ndk-r26b/* ${{ github.workspace }}/android-ndk/
        rm -rf android-ndk-r26b android-ndk-r26b-linux.zip
        echo "ANDROID_NDK_ROOT=${{ github.workspace }}/android-ndk" >> $GITHUB_ENV

    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          pkg-config \
          ninja-build \
          libssl-dev \
          yasm \
          nasm \
          autoconf \
          automake \
          libtool \
          cmake \
          perl

    - name: Build OpenSSL
      run: |
        git clone --depth 1 --branch openssl-3.0.12 https://github.com/openssl/openssl.git
        cd openssl
        
        export ANDROID_NDK_HOME=$ANDROID_NDK_ROOT
        export PATH=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
        
        # Create installation directory
        mkdir -p ${{ github.workspace }}/prebuilt/android-${{ matrix.arch }}/openssl
        
        # Set up environment for OpenSSL build
        export ANDROID_API=21
        
        # Set the correct host for the architecture
        case "${{ matrix.arch }}" in
          "arm64")
            HOST="aarch64-linux-android"
            ;;
          "armv7"|"armv7neon")
            HOST="armv7a-linux-androideabi"
            ;;
          "x86")
            HOST="i686-linux-android"
            ;;
          "x86_64")
            HOST="x86_64-linux-android"
            ;;
        esac
        
        # Configure OpenSSL
        ./Configure ${{ matrix.openssl_arch }} \
          -D__ANDROID_API__=$ANDROID_API \
          --prefix=${{ github.workspace }}/prebuilt/android-${{ matrix.arch }}/openssl \
          --openssldir=${{ github.workspace }}/prebuilt/android-${{ matrix.arch }}/openssl \
          -U__ANDROID_API__ \
          -fPIC \
          no-shared \
          no-tests \
          no-comp \
          no-engine \
          no-dso \
          no-async
        
        # Build and install
        make -j$(nproc) build_sw
        make install_sw

    - name: Download and Extract FFmpeg
      run: |
        git clone https://github.com/FFmpeg/FFmpeg.git ffmpeg
        cd ffmpeg
        git checkout release/6.0

    - name: Build FFmpeg
      working-directory: ffmpeg
      run: |
        export PATH=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
        export TOOLCHAIN=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64
        
        EXTRA_FLAGS=""
        if [ "${{ matrix.arch }}" = "armv7" ] || [ "${{ matrix.arch }}" = "armv7neon" ]; then
          EXTRA_FLAGS="--extra-cflags=-mfpu=neon --extra-cflags=-mfloat-abi=softfp"
        fi
        
        # Add OpenSSL config
        export PKG_CONFIG_PATH=${{ github.workspace }}/prebuilt/android-${{ matrix.arch }}/openssl/lib/pkgconfig
        export SSL_DIR=${{ github.workspace }}/prebuilt/android-${{ matrix.arch }}/openssl
        
        ./configure \
          --cross-prefix=${{ matrix.cross_prefix }} \
          --sysroot=$TOOLCHAIN/sysroot \
          --prefix=${{ github.workspace }}/prebuilt/android-${{ matrix.arch }}/ffmpeg \
          --enable-version3 \
          --arch=${{ matrix.arch_flag }} \
          --cpu=${{ matrix.cpu }} \
          --target-os=android \
          --enable-neon \
          --enable-asm \
          --enable-inline-asm \
          --enable-gpl \
          --enable-openssl \
          --enable-protocol=http \
          --enable-protocol=https \
          --extra-cflags="-I$SSL_DIR/include" \
          --extra-ldflags="-L$SSL_DIR/lib" \
          --ar=llvm-ar \
          --cc=${{ matrix.cc }} \
          --cxx=${{ matrix.cxx }} \
          --ranlib=llvm-ranlib \
          --strip=llvm-strip \
          --nm=llvm-nm \
          --disable-autodetect \
          --enable-cross-compile \
          --enable-pic \
          --enable-jni \
          --enable-optimizations \
          --enable-swscale \
          --disable-static \
          --enable-shared \
          --enable-pthreads \
          --disable-v4l2-m2m \
          --disable-outdev=fbdev \
          --disable-indev=fbdev \
          --enable-small \
          --disable-xmm-clobber-test \
          --disable-debug \
          --enable-lto \
          --disable-neon-clobber-test \
          --disable-programs \
          --enable-nonfree \
          --disable-postproc \
          $EXTRA_FLAGS

        make clean
        make -j$(nproc)
        make install

    - name: Upload artifactss
      uses: actions/upload-artifact@v4
      with:
        name: ffmpeg-android-${{ matrix.arch }}
        path: ${{ github.workspace }}/prebuilt/android-${{ matrix.arch }}/ffmpeg/
