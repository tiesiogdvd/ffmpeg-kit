name: Build FFmpeg Cross-Platform

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NDK_VERSION: "26.2.11394342"
  FFMPEG_VERSION: "release/6.0"

jobs:
  build:
    strategy:
      matrix:
        include:
          # Android builds
          - platform: android
            os: ubuntu-latest
            arch: arm64
            cross_prefix: aarch64-linux-android-
            arch_flag: aarch64
            cpu: armv8-a
            cc: aarch64-linux-android21-clang
            cxx: aarch64-linux-android21-clang++
            android_abi: arm64-v8a
          - platform: android
            os: ubuntu-latest  
            arch: armv7
            cross_prefix: arm-linux-androideabi-
            arch_flag: arm
            cpu: armv7-a
            cc: armv7a-linux-androideabi21-clang
            cxx: armv7a-linux-androideabi21-clang++
            android_abi: armeabi-v7a
          - platform: android
            os: ubuntu-latest
            arch: x86_64
            cross_prefix: x86_64-linux-android-
            arch_flag: x86_64
            cpu: x86-64
            cc: x86_64-linux-android21-clang
            cxx: x86_64-linux-android21-clang++
            android_abi: x86_64
            
          # iOS builds
          - platform: ios
            os: macos-latest
            arch: arm64
            sdk: iphoneos
            deployment_target: "12.0"
          - platform: ios
            os: macos-latest
            arch: x86_64
            sdk: iphonesimulator
            deployment_target: "12.0"
          - platform: ios
            os: macos-latest
            arch: arm64
            sdk: iphonesimulator
            deployment_target: "12.0"
            
          # macOS builds
          - platform: macos
            os: macos-latest
            arch: arm64
            deployment_target: "11.0"
          - platform: macos
            os: macos-latest
            arch: x86_64
            deployment_target: "10.15"
            
          # Windows builds
          - platform: windows
            os: windows-latest
            arch: x64
            msvc_arch: x64
          - platform: windows
            os: windows-latest
            arch: x86
            msvc_arch: x86
            
          # Linux builds
          - platform: linux
            os: ubuntu-latest
            arch: x86_64
          - platform: linux
            os: ubuntu-latest
            arch: aarch64
      fail-fast: false
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    # Platform-specific setup steps
    - name: Setup Android NDK
      if: matrix.platform == 'android'
      run: |
        mkdir -p ${{ github.workspace }}/android-ndk
        wget -q https://dl.google.com/android/repository/android-ndk-r26b-linux.zip
        unzip -q android-ndk-r26b-linux.zip
        mv android-ndk-r26b/* ${{ github.workspace }}/android-ndk/
        rm -rf android-ndk-r26b android-ndk-r26b-linux.zip
        echo "ANDROID_NDK_ROOT=${{ github.workspace }}/android-ndk" >> $GITHUB_ENV

    - name: Setup iOS/macOS
      if: matrix.platform == 'ios' || matrix.platform == 'macos'
      run: |
        sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
        # Install additional dependencies if needed
        brew install pkg-config nasm

    - name: Setup Windows MSVC
      if: matrix.platform == 'windows'
      uses: microsoft/setup-msbuild@v1

    - name: Setup Linux dependencies
      if: matrix.platform == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          pkg-config ninja-build yasm nasm autoconf automake libtool cmake perl
        # Setup cross-compilation for aarch64 if needed
        if [ "${{ matrix.arch }}" = "aarch64" ]; then
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
        fi

    - name: Download FFmpeg
      run: |
        git clone https://github.com/FFmpeg/FFmpeg.git ffmpeg
        cd ffmpeg
        git checkout ${{ env.FFMPEG_VERSION }}

    # Platform-specific build steps
    - name: Build FFmpeg - Android
      if: matrix.platform == 'android'
      working-directory: ffmpeg
      run: |
        export PATH=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
        export TOOLCHAIN=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64
        
        ./configure \
          --cross-prefix=${{ matrix.cross_prefix }} \
          --sysroot=$TOOLCHAIN/sysroot \
          --prefix=${{ github.workspace }}/prebuilt/${{ matrix.platform }}-${{ matrix.arch }} \
          --arch=${{ matrix.arch_flag }} \
          --cpu=${{ matrix.cpu }} \
          --target-os=android \
          --enable-cross-compile \
          --cc=${{ matrix.cc }} \
          --cxx=${{ matrix.cxx }} \
          --enable-shared \
          --disable-static \
          --disable-programs \
          --enable-pic
        
        make -j$(nproc)
        make install

    - name: Build FFmpeg - iOS
      if: matrix.platform == 'ios'
      working-directory: ffmpeg
      run: |
        SDK_PATH=$(xcrun --sdk ${{ matrix.sdk }} --show-sdk-path)
        
        ./configure \
          --prefix=${{ github.workspace }}/prebuilt/${{ matrix.platform }}-${{ matrix.arch }} \
          --enable-cross-compile \
          --target-os=darwin \
          --arch=${{ matrix.arch }} \
          --cc="xcrun -sdk ${{ matrix.sdk }} clang" \
          --cxx="xcrun -sdk ${{ matrix.sdk }} clang++" \
          --extra-cflags="-arch ${{ matrix.arch }} -mios-version-min=${{ matrix.deployment_target }}" \
          --extra-ldflags="-arch ${{ matrix.arch }} -mios-version-min=${{ matrix.deployment_target }}" \
          --enable-static \
          --disable-shared \
          --disable-programs
        
        make -j$(sysctl -n hw.ncpu)
        make install

    - name: Build FFmpeg - macOS
      if: matrix.platform == 'macos'
      working-directory: ffmpeg
      run: |
        ./configure \
          --prefix=${{ github.workspace }}/prebuilt/${{ matrix.platform }}-${{ matrix.arch }} \
          --arch=${{ matrix.arch }} \
          --extra-cflags="-arch ${{ matrix.arch }} -mmacosx-version-min=${{ matrix.deployment_target }}" \
          --extra-ldflags="-arch ${{ matrix.arch }} -mmacosx-version-min=${{ matrix.deployment_target }}" \
          --enable-shared \
          --disable-static \
          --disable-programs
        
        make -j$(sysctl -n hw.ncpu)
        make install

    - name: Build FFmpeg - Windows
      if: matrix.platform == 'windows'
      working-directory: ffmpeg
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" ${{ matrix.msvc_arch }}
        
        bash -c "./configure \
          --prefix=${{ github.workspace }}/prebuilt/${{ matrix.platform }}-${{ matrix.arch }} \
          --arch=${{ matrix.arch }} \
          --target-os=win32 \
          --toolchain=msvc \
          --enable-shared \
          --disable-static \
          --disable-programs"
        
        make -j%NUMBER_OF_PROCESSORS%
        make install

    - name: Build FFmpeg - Linux
      if: matrix.platform == 'linux'
      working-directory: ffmpeg
      run: |
        CONFIGURE_FLAGS=""
        if [ "${{ matrix.arch }}" = "aarch64" ]; then
          CONFIGURE_FLAGS="--enable-cross-compile --cross-prefix=aarch64-linux-gnu- --arch=aarch64"
        fi
        
        ./configure \
          --prefix=${{ github.workspace }}/prebuilt/${{ matrix.platform }}-${{ matrix.arch }} \
          $CONFIGURE_FLAGS \
          --enable-shared \
          --disable-static \
          --disable-programs
        
        make -j$(nproc)
        make install

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ffmpeg-${{ matrix.platform }}-${{ matrix.arch }}
        path: ${{ github.workspace }}/prebuilt/${{ matrix.platform }}-${{ matrix.arch }}/
